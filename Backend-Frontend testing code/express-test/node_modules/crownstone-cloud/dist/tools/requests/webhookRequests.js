"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const requestorBase_1 = require("../requestorBase");
const request_1 = require("../../util/request");
class WebhookRequests extends requestorBase_1.RequestorBase {
    async isListenerActive(token = '', userId = '') {
        const { body } = await request_1.req("GET", `${this.endpoint}listeners/active`, { ...this.hookSecurityApi, searchParams: { token, userId }, responseType: 'json' });
        return body;
    }
    async createListener(userId, token, eventTypes, url) {
        await request_1.req("POST", `${this.endpoint}listeners`, {
            json: { userId, token, eventTypes, url },
            ...this.hookSecurityApi,
            responseType: 'json'
        });
    }
    async getListeners() {
        const { body } = await request_1.req("GET", `${this.endpoint}listeners`, {
            ...this.hookSecurityApi,
            responseType: 'json'
        });
        return body;
    }
    async deleteListenerByToken(token) {
        const { body } = await request_1.req("DELETE", `${this.endpoint}listeners/token`, {
            ...this.hookSecurityApi,
            searchParams: { token: token },
            responseType: 'json'
        });
        return body;
    }
    async deleteListenerByUserId(userId) {
        const { body } = await request_1.req("DELETE", `${this.endpoint}listeners/userId`, {
            ...this.hookSecurityApi,
            searchParams: { userId: userId },
            responseType: 'json'
        });
        return body;
    }
}
exports.WebhookRequests = WebhookRequests;
//# sourceMappingURL=webhookRequests.js.map