export declare class CacheStorage {
    downloadedAll: {
        spheres: boolean;
        crownstones: boolean;
        locations: boolean;
    };
    downloadedAllInSphere: {
        [sphereId: string]: {
            crownstones: boolean;
            locations: boolean;
            users: boolean;
        };
    };
    spheres: {
        [sphereId: string]: cloud_Sphere;
    };
    crownstones: {
        [stoneId: string]: cloud_Stone;
    };
    locations: {
        [locationId: string]: cloud_Location;
    };
    users: {
        [userId: string]: cloud_User;
    };
    keys: cloud_Keys[];
    hubs: {
        [hubId: string]: cloud_Hub;
    };
    user: cloud_UserData;
    findSpheres(filter: filter): cloud_Sphere[];
    findCrownstones(filter: filter): cloud_Stone[];
    findLocations(filter: filter): cloud_Location[];
    findUsers(filter: filter): cloud_User[];
    _find(filter: filter, container: any, specifics?: any): any[];
}
export declare function listCache(container: any): any[];
export declare function listCacheItemsInSphereInLocation(container: any, sphereIds: string[], locationIds: string[], itemIds: string[]): any[];
export declare function listCacheItemsInSphere(container: any, sphereIds: string[], itemIds: string[]): any[];
export declare function listCacheItemsInLocation(container: any, locationIds: string[], itemIds: string[]): any[];
export declare function listCacheItems(container: any, itemIds: string[]): any[];
export declare function gotAllInSphere(cache: CacheStorage, sphereId: any, type: "crownstones" | "locations" | "users"): void;
