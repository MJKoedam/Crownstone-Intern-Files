/// <reference types="node" />
export declare class BasePacket {
    type: number;
    length: number;
    payloadBuffer: any;
    constructor(packetType: number);
    loadKey(keyString: any): this;
    loadString(string: any): this;
    loadInt8(int8: any): this;
    loadUInt8(uint8: any): this;
    loadUInt16(uint16: any): this;
    loadUInt32(uint32: any): this;
    loadByteArray(byteArray: any): this;
    loadBuffer(buffer: any): this;
    _process(): this;
    getPacket(): Buffer;
}
export declare class ControlPacket extends BasePacket {
}
export declare class FactoryResetPacket extends ControlPacket {
    constructor();
}
export declare class ControlStateGetPacket extends BasePacket {
    stateType: number;
    id: number;
    persistenceMode: number;
    constructor(stateType: any, id: any, persistenceMode: any);
    getPacket(): Buffer;
}
export declare class ControlStateSetPacket extends BasePacket {
    stateType: number;
    id: number;
    persistenceMode: number;
    constructor(stateType: any, id: any, persistenceMode: any);
    getPacket(): Buffer;
}
