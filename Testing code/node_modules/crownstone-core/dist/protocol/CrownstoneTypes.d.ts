export declare const ControlType: {
    SETUP: number;
    FACTORY_RESET: number;
    GET_STATE: number;
    SET_STATE: number;
    RESET: number;
    GOTO_DFU: number;
    NO_OPERATION: number;
    DISCONNECT: number;
    SWITCH: number;
    MULTISWITCH: number;
    PWM: number;
    RELAY: number;
    SET_TIME: number;
    SET_TX: number;
    RESET_ERRORS: number;
    MESH_COMMAND: number;
    SET_SUN_TIME: number;
    ALLOW_DIMMING: number;
    LOCK_SWITCH: number;
    UART_MESSAGE: number;
    SAVE_BEHAVIOUR: number;
    REPLACE_BEHAVIOUR: number;
    REMOVE_BEHAVIOUR: number;
    GET_BEHAVIOUR: number;
    GET_BEHAVIOUR_INDICES: number;
    GET_BEHAVIOUR_DEBUG: number;
    REGISTER_TRACKED_DEVICE: number;
    UNSPECIFIED: number;
};
export declare let ControlTypeInv: {};
export declare const StateType: {
    PWM_PERIOD: number;
    IBEACON_MAJOR: number;
    IBEACON_MINOR: number;
    IBEACON_UUID: number;
    IBEACON_TX_POWER: number;
    TX_POWER: number;
    ADVERTISEMENT_INTERVAL: number;
    SCAN_DURATION: number;
    SCAN_BREAK_DURATION: number;
    BOOT_DELAY: number;
    MAX_CHIP_TEMP: number;
    MESH_ENABLED: number;
    ENCRYPTION_ENABLED: number;
    IBEACON_ENABLED: number;
    SCANNER_ENABLED: number;
    SPHERE_UID: number;
    CROWNSTONE_IDENTIFIER: number;
    ADMIN_ENCRYPTION_KEY: number;
    MEMBER_ENCRYPTION_KEY: number;
    BASIC_ENCRYPTION_KEY: number;
    SCAN_INTERVAL: number;
    SCAN_WINDOW: number;
    RELAY_HIGH_DURATION: number;
    LOW_TX_POWER: number;
    VOLTAGE_MULTIPLIER: number;
    CURRENT_MULITPLIER: number;
    VOLTAGE_ZERO: number;
    CURRENT_ZERO: number;
    POWER_ZERO: number;
    CURRENT_CONSUMPTION_THRESHOLD: number;
    CURRENT_CONSUMPTION_THRESHOLD_DIMMER: number;
    DIMMER_TEMP_UP_VOLTAGE: number;
    DIMMER_TEMP_DOWN_VOLTAGE: number;
    DIMMING_ALLOWED: number;
    SWITCH_LOCKED: number;
    SWITCHCRAFT_ENABLED: number;
    SWITCHCRAFT_THRESHOLD: number;
    UART_ENABLED: number;
    DEVICE_NAME: number;
    SERVICE_DATA_KEY: number;
    MESH_DEVICE_KEY: number;
    MESH_APPLICATION_KEY: number;
    MESH_NETWORK_KEY: number;
    LOCALIZATION_KEY: number;
    START_DIMMER_ON_ZERO_CROSSING: number;
    TAP_TO_TOGGLE_ENABLED: number;
    TAP_TO_TOGGLE_RSSI_THRESHOLD_OFFSET: number;
    RESET_COUNTER: number;
    SWITCH_STATE: number;
    ACCUMULATED_ENERGY: number;
    POWER_USAGE: number;
    TRACKED_DEVICES: number;
    SCHEDULE: number;
    OPERATION_MODE: number;
    TEMPERATURE: number;
    TIME: number;
    ERROR_BITMASK: number;
    SUNTIMES: number;
    BEHAVIOUR_SETTINGS: number;
};
export declare const DeviceType: {
    UNDEFINED: number;
    PLUG: number;
    GUIDESTONE: number;
    BUILTIN: number;
    CROWNSTONE_USB: number;
    BUILTIN_ONE: number;
    getLabel: (value: any) => string;
};
export declare const ResultValue: {
    SUCCESS: number;
    WAIT_FOR_SUCCESS: number;
    BUFFER_UNASSIGNED: number;
    BUFFER_LOCKED: number;
    BUFFER_TO_SMALL: number;
    WRONG_PAYLOAD_LENGTH: number;
    WRONG_PARAMETER: number;
    INVALID_MESSAGE: number;
    UNKNOWN_OP_CODE: number;
    UNKNOWN_TYPE: number;
    NOT_FOUND: number;
    NO_SPACE: number;
    BUSY: number;
    NO_ACCESS: number;
    NOT_AVAILABLE: number;
    NOT_IMPLEMENTED: number;
    WRITE_DISABLED: number;
    ERR_WRITE_NOT_ALLOWED: number;
    ADC_INVALID_CHANNEL: number;
};
export declare let ResultValueInv: {};
export declare const ProcessType: {
    CONTINUE: number;
    FINISHED: number;
    ABORT_ERROR: number;
};
export declare const BroadcastTypes: {
    NO_OP: number;
    MULTI_SWITCH: number;
    SET_TIME: number;
    BEHAVIOUR_SETTINGS: number;
};
