/// <reference types="node" />
import { CrownstoneSettings } from "../containers/CrownstoneSettings";
export declare class EncryptionHandler {
    static decryptSessionNonce(rawNonce: Buffer, key: Buffer): Buffer;
    static _decrypt(data: Buffer, sessionData: SessionData, settings: CrownstoneSettings): Buffer;
    static decryptCTR(data: Buffer, sessionData: SessionData, key: Buffer): Buffer;
    static encryptCTR(data: Buffer, sessionData: SessionData, key: Buffer, keyIndex: number): Buffer;
    static verifyAndExtractDecryption(decrypted: Buffer, sessionData: SessionData): Buffer;
    static decryptAdvertisement(data: any, key: any): Buffer;
    static generateIV(packetNonce: Buffer, sessionData: Buffer): Buffer;
    static _getKey(userLevel: any, settings: CrownstoneSettings): Buffer;
    static fillWithRandomNumbers(buff: any): void;
}
export declare class SessionData {
    sessionNonce: any;
    validationKey: any;
    constructor(sessionData?: number[] | Buffer);
    load(data: number[] | Buffer): void;
    generate(): void;
}
export declare class EncryptedPackageBase {
    nonce: Buffer;
    keyId: number;
    payload: Buffer;
    constructor(data: Buffer);
    parseData(data: Buffer): void;
    getPayload(): Buffer;
}
export declare class EncryptedPackage extends EncryptedPackageBase {
    userLevel: number;
    constructor(data: Buffer);
    validatePayload(): void;
}
