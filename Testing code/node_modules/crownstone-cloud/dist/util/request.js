"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const got_1 = __importDefault(require("got"));
const LOG = require('debug-level')('crownstone-cloud-requests');
async function req(type, url, options) {
    let token = Math.floor(Math.random() * 1e8).toString(36);
    logRequest(type, url, options, token);
    let result;
    try {
        switch (type) {
            case "POST":
                result = await got_1.default.post(url, options);
                break;
            case "GET":
                result = await got_1.default.get(url, options);
                break;
            case "DELETE":
                result = await got_1.default.delete(url, options);
                break;
            case "PUT":
                result = await got_1.default.put(url, options);
                break;
            case "PATCH":
                result = await got_1.default.patch(url, options);
                break;
        }
        LOG.debug("Request result", result, token);
        return result;
    }
    catch (err) {
        LOG.error("Something went wrong with request", token, err);
        throw err;
    }
}
exports.req = req;
function logRequest(type, url, options, token) {
    let headers = options.headers || null;
    let queryParams = options.searchParams || null;
    let bodyParams = options.json || null;
    let responseType = options.responseType;
    LOG.info("sending", type, "request to", url, 'headers:', headers, 'queryParams:', queryParams, 'bodyParams:', bodyParams, 'responseType', responseType, token);
}
//# sourceMappingURL=request.js.map