"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const requestorBase_1 = require("../requestorBase");
const request_1 = require("../../util/request");
class UserRequests extends requestorBase_1.RequestorBase {
    async login() {
        const { body } = await request_1.req("POST", `${this.endpoint}users/login`, {
            json: {
                email: this.tokenStore.cloudUser.email,
                password: this.tokenStore.cloudUser.passwordSha1,
                ttl: 7 * 24 * 3600
            },
            responseType: 'json'
        });
        return body;
    }
    async getKeys() {
        if (this.tokenStore.cloudUser.userId === undefined) {
            throw "No user logged in. If you logged in as a hub, remember that hubs cannot get keys.";
        }
        const { body } = await request_1.req("GET", `${this.endpoint}users/${this.tokenStore.cloudUser.userId}/keysV2`, this.addSecurity({ responseType: 'json' }));
        return body;
    }
    async getUserData() {
        const { body } = await request_1.req("GET", `${this.endpoint}users/me`, this.addSecurity({ responseType: 'json' }));
        let userData = body;
        // this.cache.user = userData;
        return userData;
    }
    async getUserId() {
        const { body } = await request_1.req("GET", `${this.endpoint}users/userId`, this.addSecurity({ responseType: 'json' }));
        this.tokenStore.cloudUser.userId = body;
        return body;
    }
    async getCurrentLocation(userId) {
        const { body } = await request_1.req("GET", `${this.endpoint}users/${userId}/currentLocation`, this.addSecurity({ responseType: 'json' }));
        return body;
    }
}
exports.UserRequests = UserRequests;
//# sourceMappingURL=userRequests.js.map