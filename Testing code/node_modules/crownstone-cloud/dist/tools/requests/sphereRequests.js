"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const requestorBase_1 = require("../requestorBase");
const request_1 = require("../../util/request");
class SphereRequests extends requestorBase_1.RequestorBase {
    async getSpheres() {
        const { body } = await request_1.req("GET", `${this.endpoint}users/${this.tokenStore.cloudUser.userId}/spheres`, this.addSecurity({ responseType: 'json' }));
        this.cache.downloadedAll['spheres'] = true;
        return body;
    }
    async getSphere(sphereId) {
        const { body } = await request_1.req("GET", `${this.endpoint}Spheres/${sphereId}`, this.addSecurity({ responseType: 'json' }));
        return body;
    }
    async getHubSphere() {
        if (this.tokenStore.cloudHub.hubId === undefined) {
            throw "No Hub loaded.";
        }
        let sphereId = undefined;
        if (this.tokenStore.cloudHub.sphereId === undefined) {
            let { body } = await request_1.req("GET", `${this.endpoint}Hubs/${this.tokenStore.cloudHub.hubId}`, this.addSecurity({ responseType: 'json' }));
            let hubData = body;
            this.cache.hubs[hubData.id] = hubData;
            sphereId = hubData.sphereId;
        }
        return this.getSphere(sphereId);
    }
}
exports.SphereRequests = SphereRequests;
//# sourceMappingURL=sphereRequests.js.map