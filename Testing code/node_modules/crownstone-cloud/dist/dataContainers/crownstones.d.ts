import { Locations } from "./locations";
import { Spheres } from "./spheres";
import { CloudRequestorInterface } from "../tools/requestors";
export declare class Crownstones {
    locations: Locations;
    spheres: Spheres;
    rest: CloudRequestorInterface;
    filter: filter;
    stoneIds: any[];
    constructor(cloudRequestor: CloudRequestorInterface, spheres?: Spheres, locations?: Locations, crownstoneIdentifier?: filter);
    refresh(): Promise<this>;
    downloadAllCrownstones(): Promise<cloud_Stone[]>;
    id(id: string): this;
    /**
     * this method will ensure we know which ID's to use for this request.
     */
    prepare(): Promise<void>;
    setMultiSwitch(switchData: SwitchData[]): Promise<void>;
    currentSwitchState(): Promise<number>;
    currentSwitchStateData(): Promise<{
        [stoneId: string]: cloud_SwitchState;
    }>;
    setSwitch(value: number): Promise<void>;
    turnOn(): Promise<void>;
    turnOff(): Promise<void>;
    _switch(switchData: StoneSwitchData): Promise<void>;
    _searchInCache(): boolean;
    resolveIdentifier(): Promise<void>;
    data(): Promise<cloud_Stone[]>;
    _getFilteredData(): cloud_Stone[];
}
