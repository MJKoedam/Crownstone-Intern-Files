import { Toolchain } from "./tools/toolchain";
import { CloudRequestorInterface } from "./tools/requestors";
import { User } from "./dataContainers/user";
import { Sphere } from "./dataContainers/sphere";
import { Location } from "./dataContainers/Location";
import { Crownstone } from "./dataContainers/crownstone";
import { Hub } from "./dataContainers/hub";
export declare class CrownstoneCloud {
    log: Logger;
    toolchain: Toolchain;
    rest: CloudRequestorInterface;
    constructor(customEndpoint?: string);
    login(email: string, password: string): Promise<UserLoginData>;
    loginHashed(email: string, hashedPassword: string): Promise<UserLoginData>;
    hubLogin(hubId: string, hubToken: string): Promise<HubLoginData>;
    hashPassword(plaintextPassword: string): string;
    setAccessToken(accessToken: string, userId?: string): void;
    spheres(): Promise<cloud_Sphere[]>;
    locations(): Promise<cloud_Location[]>;
    crownstones(): Promise<cloud_Stone[]>;
    keys(): Promise<cloud_Keys[]>;
    sphere(id: string): Sphere;
    location(id: string): Location;
    crownstone(id: string): Crownstone;
    me(): User;
    hub(): Hub;
}
