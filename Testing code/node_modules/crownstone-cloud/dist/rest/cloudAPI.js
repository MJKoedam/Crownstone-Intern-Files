'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const bootloader_1 = require("./sections/bootloader");
const cloudApiBase_1 = require("./sections/cloudApiBase");
const devices_1 = require("./sections/devices");
const firmware_1 = require("./sections/firmware");
const fingerprints_1 = require("./sections/fingerprints");
const installations_1 = require("./sections/installations");
const locations_1 = require("./sections/locations");
const messages_1 = require("./sections/messages");
const preferences_1 = require("./sections/preferences");
const stones_1 = require("./sections/stones");
const stonesAbilities_1 = require("./sections/stonesAbilities");
const stonesBehaviours_1 = require("./sections/stonesBehaviours");
const spheres_1 = require("./sections/spheres");
const user_1 = require("./sections/user");
const Util_1 = require("../util/Util");
const hub_1 = require("./sections/hub");
function combineSections() {
    let result = {};
    Util_1.Util.mixin(result, cloudApiBase_1.cloudApiBase, result);
    // mixin all modules.
    Util_1.Util.mixin(result, bootloader_1.bootloader, result);
    Util_1.Util.mixin(result, devices_1.devices, result);
    Util_1.Util.mixin(result, firmware_1.firmware, result);
    Util_1.Util.mixin(result, fingerprints_1.fingerprints, result);
    Util_1.Util.mixin(result, installations_1.installations, result);
    Util_1.Util.mixin(result, locations_1.locations, result);
    Util_1.Util.mixin(result, hub_1.hub, result);
    Util_1.Util.mixin(result, messages_1.messages, result);
    Util_1.Util.mixin(result, preferences_1.preferences, result);
    Util_1.Util.mixin(result, spheres_1.spheres, result);
    Util_1.Util.mixin(result, stones_1.stones, result);
    Util_1.Util.mixin(result, stonesAbilities_1.stonesAbilities, result);
    Util_1.Util.mixin(result, stonesBehaviours_1.stonesBehaviours, result);
    Util_1.Util.mixin(result, user_1.user, result);
    return result;
}
/**
 * This adds all sections into the REST
 */
exports.REST = combineSections();
exports.REST.setAccessToken = function (accessToken) { cloudApiBase_1.TokenStore.accessToken = accessToken; return exports.REST; };
exports.REST.setUserId = function (userId) { cloudApiBase_1.TokenStore.userId = userId; return exports.REST; };
exports.REST.forUser = function (userId) { cloudApiBase_1.TokenStore.userId = userId; return exports.REST; };
exports.REST.forDevice = function (deviceId) { cloudApiBase_1.TokenStore.deviceId = deviceId; return exports.REST; };
exports.REST.forInstallation = function (installationId) { cloudApiBase_1.TokenStore.installationId = installationId; return exports.REST; };
exports.REST.forStone = function (stoneId) { cloudApiBase_1.TokenStore.stoneId = stoneId; return exports.REST; };
exports.REST.forSphere = function (sphereId) { cloudApiBase_1.TokenStore.sphereId = sphereId; return exports.REST; };
exports.REST.forLocation = function (locationId) { cloudApiBase_1.TokenStore.locationId = locationId; return exports.REST; };
exports.REST.forMessage = function (messageId) { cloudApiBase_1.TokenStore.messageId = messageId; return exports.REST; };
exports.REST.forHub = function (hubId) { cloudApiBase_1.TokenStore.hubId = hubId; return exports.REST; };
//# sourceMappingURL=cloudAPI.js.map